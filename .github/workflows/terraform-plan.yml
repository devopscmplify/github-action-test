name: Terraform Plan

on:
    pull_request:
        branches:
            - main

env:
  tf_actions_working_dir: './dev'


jobs:
    terraform-plan:
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ${{ env.tf_actions_working_dir }}

        permissions:
          id-token: write
          actions: read        # Required to identify workflow run.
          checks: write        # Required to add status summary.
          contents: read       # Required to checkout repository.
          pull-requests: write # Required to add PR comment.
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

          
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4.1.0
          with:
            audience: sts.amazonaws.com.cn
            aws-region: us-east-1
            role-to-assume: arn:aws:iam::746196583728:role/ga-role-aws
          
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3

        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: true

        - name: Terraform Init
          id: init
          run: terraform init -input=false

        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color -input=false
          continue-on-error: true

        - uses: actions/github-script@v7
          if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              <details><summary>Validation Output</summary>
        
              \`\`\`\n
              ${{ steps.validate.outputs.stdout }}
              \`\`\`
        
              </details>
        
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        
              <details><summary>Show Plan</summary>
        
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
        
              </details>
        
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })